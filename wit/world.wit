package component:wasmpath@0.1.0;

interface game {
    record position {
        row: u32,
        column: u32,
    }

    resource state {
        log-state: func();
        /// get target position in the grid
        target-position: func() -> position;
        /// get player position in the grid
        player-position: func() -> position;
        /// get adjacent cells (left, right, up, and left) of provided cell position
        adjacent-cells: func(cell: position) -> list<position>;
    }
    
}

interface solution {
    use game.{state};

    enum direction {
        up,
        down,
        left,
        right,
    }

    resource solver {
        constructor(state: borrow<state>);
        step: func(state: borrow<state>) -> option<direction>;
    }
}

world wasm-path {
    import game;
    export solution;
}
